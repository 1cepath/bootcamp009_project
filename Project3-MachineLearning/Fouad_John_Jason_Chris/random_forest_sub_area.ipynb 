{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "total=pd.read_csv(\"./total_full_5_28.csv\")\n",
    "import sklearn as sk\n",
    "from sklearn import ensemble\n",
    "randomForest = ensemble.RandomForestRegressor()\n",
    "from matplotlib import pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from sklearn import preprocessing\n",
    "le_state = preprocessing.LabelEncoder()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['Unnamed: 0', 'V1', 'id', 'timestamp', 'full_sq', 'life_sq',\n",
       "       'floor', 'num_room', 'kitch_sq', 'product_type', 'sub_area',\n",
       "       'area_m', 'raion_popul', 'green_zone_part', 'indust_part',\n",
       "       'children_preschool', 'preschool_education_centers_raion',\n",
       "       'children_school', 'school_education_centers_raion',\n",
       "       'school_education_centers_top_20_raion', 'healthcare_centers_raion',\n",
       "       'university_top_20_raion', 'sport_objects_raion',\n",
       "       'additional_education_raion', 'culture_objects_top_25',\n",
       "       'culture_objects_top_25_raion', 'shopping_centers_raion',\n",
       "       'office_raion', 'thermal_power_plant_raion', 'incineration_raion',\n",
       "       'oil_chemistry_raion', 'radiation_raion', 'railroad_terminal_raion',\n",
       "       'big_market_raion', 'nuclear_reactor_raion',\n",
       "       'detention_facility_raion', 'full_all', 'male_f', 'female_f',\n",
       "       'young_all', 'young_male', 'young_female', 'work_all', 'work_male',\n",
       "       'work_female', 'ekder_all', 'ekder_male', 'ekder_female', '0_6_all',\n",
       "       '0_6_male', '0_6_female', '7_14_all', '7_14_male', '7_14_female',\n",
       "       '0_17_all', '0_17_male', '0_17_female', '16_29_all', '16_29_male',\n",
       "       '16_29_female', '0_13_all', '0_13_male', '0_13_female', 'ID_metro',\n",
       "       'metro_min_avto', 'metro_km_avto', 'metro_min_walk',\n",
       "       'metro_km_walk', 'kindergarten_km', 'school_km', 'park_km',\n",
       "       'green_zone_km', 'industrial_km', 'water_treatment_km',\n",
       "       'cemetery_km', 'incineration_km', 'railroad_station_walk_km',\n",
       "       'railroad_station_walk_min', 'ID_railroad_station_walk',\n",
       "       'railroad_station_avto_km', 'railroad_station_avto_min',\n",
       "       'ID_railroad_station_avto', 'public_transport_station_km',\n",
       "       'public_transport_station_min_walk', 'water_km', 'water_1line',\n",
       "       'mkad_km', 'ttk_km', 'sadovoe_km', 'bulvar_ring_km', 'kremlin_km',\n",
       "       'big_road1_km', 'ID_big_road1', 'big_road1_1line', 'big_road2_km',\n",
       "       'ID_big_road2', 'railroad_km', 'railroad_1line',\n",
       "       'zd_vokzaly_avto_km', 'ID_railroad_terminal',\n",
       "       'bus_terminal_avto_km', 'ID_bus_terminal', 'oil_chemistry_km',\n",
       "       'nuclear_reactor_km', 'radiation_km', 'power_transmission_line_km',\n",
       "       'thermal_power_plant_km', 'ts_km', 'big_market_km',\n",
       "       'market_shop_km', 'fitness_km', 'swim_pool_km', 'ice_rink_km',\n",
       "       'stadium_km', 'basketball_km', 'hospice_morgue_km',\n",
       "       'detention_facility_km', 'public_healthcare_km', 'university_km',\n",
       "       'workplaces_km', 'shopping_centers_km', 'office_km',\n",
       "       'additional_education_km', 'preschool_km', 'big_church_km',\n",
       "       'church_synagogue_km', 'mosque_km', 'theater_km', 'museum_km',\n",
       "       'exhibition_km', 'catering_km', 'ecology', 'green_part_500',\n",
       "       'prom_part_500', 'office_count_500', 'office_sqm_500',\n",
       "       'trc_count_500', 'trc_sqm_500', 'cafe_count_500',\n",
       "       'cafe_count_500_na_price', 'cafe_count_500_price_500',\n",
       "       'cafe_count_500_price_1000', 'cafe_count_500_price_1500',\n",
       "       'cafe_count_500_price_2500', 'cafe_count_500_price_4000',\n",
       "       'cafe_count_500_price_high', 'big_church_count_500',\n",
       "       'church_count_500', 'mosque_count_500', 'leisure_count_500',\n",
       "       'sport_count_500', 'market_count_500', 'green_part_1000',\n",
       "       'prom_part_1000', 'office_count_1000', 'office_sqm_1000',\n",
       "       'trc_count_1000', 'trc_sqm_1000', 'cafe_count_1000',\n",
       "       'cafe_count_1000_na_price', 'cafe_count_1000_price_500',\n",
       "       'cafe_count_1000_price_1000', 'cafe_count_1000_price_1500',\n",
       "       'cafe_count_1000_price_2500', 'cafe_count_1000_price_4000',\n",
       "       'cafe_count_1000_price_high', 'big_church_count_1000',\n",
       "       'church_count_1000', 'mosque_count_1000', 'leisure_count_1000',\n",
       "       'sport_count_1000', 'market_count_1000', 'green_part_1500',\n",
       "       'prom_part_1500', 'office_count_1500', 'office_sqm_1500',\n",
       "       'trc_count_1500', 'trc_sqm_1500', 'cafe_count_1500',\n",
       "       'cafe_count_1500_na_price', 'cafe_count_1500_price_500',\n",
       "       'cafe_count_1500_price_1000', 'cafe_count_1500_price_1500',\n",
       "       'cafe_count_1500_price_2500', 'cafe_count_1500_price_4000',\n",
       "       'cafe_count_1500_price_high', 'big_church_count_1500',\n",
       "       'church_count_1500', 'mosque_count_1500', 'leisure_count_1500',\n",
       "       'sport_count_1500', 'market_count_1500', 'prom_part_2000',\n",
       "       'office_count_2000', 'office_sqm_2000', 'trc_count_2000',\n",
       "       'trc_sqm_2000', 'cafe_count_2000', 'cafe_count_2000_na_price',\n",
       "       'cafe_count_2000_price_500', 'cafe_count_2000_price_1000',\n",
       "       'cafe_count_2000_price_1500', 'cafe_count_2000_price_2500',\n",
       "       'cafe_count_2000_price_4000', 'cafe_count_2000_price_high',\n",
       "       'big_church_count_2000', 'church_count_2000', 'mosque_count_2000',\n",
       "       'leisure_count_2000', 'sport_count_2000', 'market_count_2000',\n",
       "       'green_part_3000', 'prom_part_3000', 'office_count_3000',\n",
       "       'office_sqm_3000', 'trc_count_3000', 'trc_sqm_3000',\n",
       "       'cafe_count_3000', 'cafe_count_3000_na_price',\n",
       "       'cafe_count_3000_price_500', 'cafe_count_3000_price_1000',\n",
       "       'cafe_count_3000_price_1500', 'cafe_count_3000_price_2500',\n",
       "       'cafe_count_3000_price_4000', 'cafe_count_3000_price_high',\n",
       "       'big_church_count_3000', 'church_count_3000', 'mosque_count_3000',\n",
       "       'leisure_count_3000', 'sport_count_3000', 'market_count_3000',\n",
       "       'green_part_5000', 'prom_part_5000', 'office_count_5000',\n",
       "       'office_sqm_5000', 'trc_count_5000', 'trc_sqm_5000',\n",
       "       'cafe_count_5000', 'cafe_count_5000_na_price',\n",
       "       'cafe_count_5000_price_500', 'cafe_count_5000_price_1000',\n",
       "       'cafe_count_5000_price_1500', 'cafe_count_5000_price_2500',\n",
       "       'cafe_count_5000_price_4000', 'cafe_count_5000_price_high',\n",
       "       'big_church_count_5000', 'church_count_5000', 'mosque_count_5000',\n",
       "       'leisure_count_5000', 'sport_count_5000', 'market_count_5000',\n",
       "       'price_doc', 'train_or_test', 'NAME', 'OKRUG', 'ratio_1920',\n",
       "       'ratio_1921', 'ratio_1946', 'ratio_1971', 'ratio_1995',\n",
       "       'ratio_block', 'ratio_wood', 'ratio_frame', 'ratio_brick',\n",
       "       'ratio_monolith', 'ratio_panel', 'ratio_foam', 'oil_urals',\n",
       "       'gdp_quart', 'gdp_quart_growth', 'cpi', 'ppi', 'gdp_deflator',\n",
       "       'balance_trade', 'balance_trade_growth', 'usdrub', 'eurrub',\n",
       "       'brent', 'net_capital_export', 'gdp_annual', 'gdp_annual_growth',\n",
       "       'state', 'material', 'dis_mrb', 'dis_road'], dtype=object)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LabelEncoder()"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#transforming state into categorical\n",
    "le_state.fit(total[\"state\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "total[\"state\"] = le_state.transform(total[\"state\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    22756\n",
       "2     7703\n",
       "0     7118\n",
       "3      549\n",
       "Name: state, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total[\"state\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#transforming material variable \n",
    "le_material = preprocessing.LabelEncoder()\n",
    "le_material.fit(total[\"material\"])\n",
    "total[\"material\"] = le_material.transform(total[\"material\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    29007\n",
       "1     3947\n",
       "4     2048\n",
       "3     1963\n",
       "5     1159\n",
       "2        2\n",
       "Name: material, dtype: int64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total[\"material\"].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#transforming sub_area\n",
    "le_subarea = preprocessing.LabelEncoder()\n",
    "le_subarea.fit(total[\"OKRUG\"])\n",
    "total[\"OKRUG\"] = le_subarea.transform(total[\"OKRUG\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "total1=total[['id','price_doc',\n",
    "                'full_sq',\n",
    "                'life_sq',\n",
    "                'num_room',\n",
    "                'sport_count_5000',\n",
    "                'trc_count_5000',\n",
    "                'zd_vokzaly_avto_km',\n",
    "                'sadovoe_km',\n",
    "                'kremlin_km',\n",
    "                'bulvar_ring_km',\n",
    "                'ttk_km',\n",
    "                'office_sqm_5000',\n",
    "                'nuclear_reactor_km',\n",
    "                'sport_objects_raion',\n",
    "                'cafe_count_5000_price_1000',\n",
    "                'stadium_km',\n",
    "                'kitch_sq',\n",
    "                'university_km',\n",
    "                'theater_km',\n",
    "                'swim_pool_km',\n",
    "                'catering_km',\n",
    "                'thermal_power_plant_km',\n",
    "                'workplaces_km',\n",
    "                'market_count_5000',\n",
    "                'school_education_centers_raion',\n",
    "                'big_church_km',\n",
    "                'metro_min_avto',\n",
    "                'healthcare_centers_raion',\n",
    "                'shopping_centers_km',\n",
    "                'mosque_count_5000',\n",
    "                'public_healthcare_km',\n",
    "                'ekder_all',\n",
    "                'area_m',\n",
    "                'university_top_20_raion',\n",
    "                'leisure_count_500',\n",
    "                'big_road2_km',\n",
    "                'bus_terminal_avto_km',\n",
    "                'ratio_brick',\n",
    "                'green_part_5000',\n",
    "                'ice_rink_km',\n",
    "                'raion_popul',\n",
    "                'hospice_morgue_km',\n",
    "                'additional_education_km',\n",
    "                'school_km',\n",
    "                'ratio_1920',\n",
    "                'railroad_station_avto_min','OKRUG','train_or_test']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "a = pd.get_dummies(total1.state)\n",
    "L = range(0, len(a.columns))\n",
    "a.columns = [\"state_\"+str(x) for x in L]\n",
    "total1 = pd.concat([total1,a], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "b = pd.get_dummies(total1.OKRUG)\n",
    "L = range(0, len(b.columns))\n",
    "b.columns = [\"OKRUG_\"+str(x) for x in L]\n",
    "total1 = pd.concat([total1,b],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "c = pd.get_dummies(total1.material)\n",
    "L = range(0, len(c.columns))\n",
    "c.columns = [\"material_\"+str(x) for x in L]\n",
    "total1 = pd.concat([total1,c],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>price_doc</th>\n",
       "      <th>full_sq</th>\n",
       "      <th>life_sq</th>\n",
       "      <th>num_room</th>\n",
       "      <th>sport_count_5000</th>\n",
       "      <th>trc_count_5000</th>\n",
       "      <th>zd_vokzaly_avto_km</th>\n",
       "      <th>sadovoe_km</th>\n",
       "      <th>kremlin_km</th>\n",
       "      <th>...</th>\n",
       "      <th>sub_area_142</th>\n",
       "      <th>sub_area_143</th>\n",
       "      <th>sub_area_144</th>\n",
       "      <th>sub_area_145</th>\n",
       "      <th>material_0</th>\n",
       "      <th>material_1</th>\n",
       "      <th>material_2</th>\n",
       "      <th>material_3</th>\n",
       "      <th>material_4</th>\n",
       "      <th>material_5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>5850000.0</td>\n",
       "      <td>43.00</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>52</td>\n",
       "      <td>52</td>\n",
       "      <td>14.231961</td>\n",
       "      <td>13.100618</td>\n",
       "      <td>15.156211</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>34.00</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>66</td>\n",
       "      <td>40</td>\n",
       "      <td>9.242586</td>\n",
       "      <td>6.444333</td>\n",
       "      <td>8.698054</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>5700000.0</td>\n",
       "      <td>43.00</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>67</td>\n",
       "      <td>35</td>\n",
       "      <td>9.540544</td>\n",
       "      <td>6.963403</td>\n",
       "      <td>9.067885</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>13100000.0</td>\n",
       "      <td>89.00</td>\n",
       "      <td>50.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>26</td>\n",
       "      <td>22</td>\n",
       "      <td>17.478380</td>\n",
       "      <td>17.457198</td>\n",
       "      <td>19.487005</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>16331452.0</td>\n",
       "      <td>77.00</td>\n",
       "      <td>77.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>195</td>\n",
       "      <td>114</td>\n",
       "      <td>1.595898</td>\n",
       "      <td>0.046810</td>\n",
       "      <td>2.578671</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>9100000.0</td>\n",
       "      <td>67.00</td>\n",
       "      <td>46.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>113</td>\n",
       "      <td>63</td>\n",
       "      <td>5.070197</td>\n",
       "      <td>3.519389</td>\n",
       "      <td>5.645796</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>5500000.0</td>\n",
       "      <td>25.00</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>127</td>\n",
       "      <td>49</td>\n",
       "      <td>3.028547</td>\n",
       "      <td>3.940566</td>\n",
       "      <td>6.468719</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>2000000.0</td>\n",
       "      <td>44.00</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>47</td>\n",
       "      <td>45</td>\n",
       "      <td>14.434462</td>\n",
       "      <td>13.713752</td>\n",
       "      <td>15.770426</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>5300000.0</td>\n",
       "      <td>42.00</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>85</td>\n",
       "      <td>41</td>\n",
       "      <td>7.500715</td>\n",
       "      <td>8.290837</td>\n",
       "      <td>10.357535</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>2000000.0</td>\n",
       "      <td>36.00</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>67</td>\n",
       "      <td>32</td>\n",
       "      <td>10.229145</td>\n",
       "      <td>8.955785</td>\n",
       "      <td>10.869120</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>4650000.0</td>\n",
       "      <td>36.00</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>22.634270</td>\n",
       "      <td>14.969009</td>\n",
       "      <td>17.066796</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>4800000.0</td>\n",
       "      <td>38.00</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>14.922287</td>\n",
       "      <td>14.064827</td>\n",
       "      <td>16.137704</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>5100000.0</td>\n",
       "      <td>43.00</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>47</td>\n",
       "      <td>27</td>\n",
       "      <td>12.434540</td>\n",
       "      <td>11.288612</td>\n",
       "      <td>13.202861</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>5200000.0</td>\n",
       "      <td>31.00</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>166</td>\n",
       "      <td>61</td>\n",
       "      <td>4.113420</td>\n",
       "      <td>2.539289</td>\n",
       "      <td>4.450091</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>5000000.0</td>\n",
       "      <td>31.00</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>132</td>\n",
       "      <td>72</td>\n",
       "      <td>4.912176</td>\n",
       "      <td>3.331354</td>\n",
       "      <td>5.469216</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>1850000.0</td>\n",
       "      <td>51.00</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>53</td>\n",
       "      <td>36</td>\n",
       "      <td>15.831816</td>\n",
       "      <td>11.908445</td>\n",
       "      <td>14.118600</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>6300000.0</td>\n",
       "      <td>47.00</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>62</td>\n",
       "      <td>27</td>\n",
       "      <td>10.577456</td>\n",
       "      <td>8.210706</td>\n",
       "      <td>10.313522</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>5900000.0</td>\n",
       "      <td>42.00</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>72</td>\n",
       "      <td>48</td>\n",
       "      <td>10.876432</td>\n",
       "      <td>6.856826</td>\n",
       "      <td>8.927901</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>7900000.0</td>\n",
       "      <td>59.00</td>\n",
       "      <td>33.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>22.990348</td>\n",
       "      <td>15.327266</td>\n",
       "      <td>17.423687</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>5200000.0</td>\n",
       "      <td>44.00</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>51</td>\n",
       "      <td>20</td>\n",
       "      <td>9.129001</td>\n",
       "      <td>9.449468</td>\n",
       "      <td>11.991410</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>8200000.0</td>\n",
       "      <td>74.00</td>\n",
       "      <td>44.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>28.618302</td>\n",
       "      <td>25.135369</td>\n",
       "      <td>27.174806</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>5200000.0</td>\n",
       "      <td>39.00</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>64</td>\n",
       "      <td>46</td>\n",
       "      <td>12.706450</td>\n",
       "      <td>11.885438</td>\n",
       "      <td>13.918482</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>6250000.0</td>\n",
       "      <td>48.00</td>\n",
       "      <td>34.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>55</td>\n",
       "      <td>49</td>\n",
       "      <td>16.354783</td>\n",
       "      <td>14.193228</td>\n",
       "      <td>16.220133</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>5750000.0</td>\n",
       "      <td>32.00</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>42</td>\n",
       "      <td>39</td>\n",
       "      <td>14.889761</td>\n",
       "      <td>13.146072</td>\n",
       "      <td>15.204932</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25</td>\n",
       "      <td>6000000.0</td>\n",
       "      <td>34.00</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>56</td>\n",
       "      <td>52</td>\n",
       "      <td>14.430812</td>\n",
       "      <td>13.743761</td>\n",
       "      <td>15.765957</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26</td>\n",
       "      <td>1050000.0</td>\n",
       "      <td>45.00</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>70</td>\n",
       "      <td>36</td>\n",
       "      <td>9.591853</td>\n",
       "      <td>8.245829</td>\n",
       "      <td>10.152502</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>5000000.0</td>\n",
       "      <td>35.00</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>84</td>\n",
       "      <td>52</td>\n",
       "      <td>11.778843</td>\n",
       "      <td>10.182335</td>\n",
       "      <td>12.245380</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28</td>\n",
       "      <td>4700000.0</td>\n",
       "      <td>38.00</td>\n",
       "      <td>20.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>11</td>\n",
       "      <td>8</td>\n",
       "      <td>23.732453</td>\n",
       "      <td>17.657139</td>\n",
       "      <td>19.688472</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>8254400.0</td>\n",
       "      <td>73.00</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>98</td>\n",
       "      <td>34</td>\n",
       "      <td>6.453580</td>\n",
       "      <td>6.539704</td>\n",
       "      <td>9.068352</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30</td>\n",
       "      <td>5900000.0</td>\n",
       "      <td>42.00</td>\n",
       "      <td>27.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>73</td>\n",
       "      <td>21</td>\n",
       "      <td>9.914711</td>\n",
       "      <td>9.327565</td>\n",
       "      <td>11.551600</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38096</th>\n",
       "      <td>38106</td>\n",
       "      <td>NaN</td>\n",
       "      <td>44.40</td>\n",
       "      <td>27.900000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>65</td>\n",
       "      <td>53</td>\n",
       "      <td>9.784584</td>\n",
       "      <td>11.302480</td>\n",
       "      <td>13.396565</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38097</th>\n",
       "      <td>38107</td>\n",
       "      <td>NaN</td>\n",
       "      <td>37.93</td>\n",
       "      <td>37.930000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>29.502495</td>\n",
       "      <td>26.124079</td>\n",
       "      <td>28.151572</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38098</th>\n",
       "      <td>38108</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64.60</td>\n",
       "      <td>46.200000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>79</td>\n",
       "      <td>49</td>\n",
       "      <td>12.035916</td>\n",
       "      <td>9.116804</td>\n",
       "      <td>10.983142</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38099</th>\n",
       "      <td>38109</td>\n",
       "      <td>NaN</td>\n",
       "      <td>42.23</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>72</td>\n",
       "      <td>25</td>\n",
       "      <td>10.234785</td>\n",
       "      <td>8.935639</td>\n",
       "      <td>11.228779</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38100</th>\n",
       "      <td>38110</td>\n",
       "      <td>NaN</td>\n",
       "      <td>57.90</td>\n",
       "      <td>36.900000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>51.759024</td>\n",
       "      <td>37.100352</td>\n",
       "      <td>39.050348</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38101</th>\n",
       "      <td>38111</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54.09</td>\n",
       "      <td>54.090000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.195354</td>\n",
       "      <td>27.271396</td>\n",
       "      <td>29.133765</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38102</th>\n",
       "      <td>38112</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36.50</td>\n",
       "      <td>20.551729</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>34.620031</td>\n",
       "      <td>31.590605</td>\n",
       "      <td>33.464853</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38103</th>\n",
       "      <td>38113</td>\n",
       "      <td>NaN</td>\n",
       "      <td>51.30</td>\n",
       "      <td>30.600000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>52</td>\n",
       "      <td>39</td>\n",
       "      <td>16.355877</td>\n",
       "      <td>12.477108</td>\n",
       "      <td>14.713940</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38104</th>\n",
       "      <td>38114</td>\n",
       "      <td>NaN</td>\n",
       "      <td>77.51</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>203</td>\n",
       "      <td>101</td>\n",
       "      <td>4.060430</td>\n",
       "      <td>2.185333</td>\n",
       "      <td>0.072897</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38105</th>\n",
       "      <td>38115</td>\n",
       "      <td>NaN</td>\n",
       "      <td>36.00</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>34.620031</td>\n",
       "      <td>31.590605</td>\n",
       "      <td>33.464853</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38106</th>\n",
       "      <td>38116</td>\n",
       "      <td>NaN</td>\n",
       "      <td>43.71</td>\n",
       "      <td>43.710000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>90</td>\n",
       "      <td>35</td>\n",
       "      <td>7.325533</td>\n",
       "      <td>8.487426</td>\n",
       "      <td>10.598351</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38107</th>\n",
       "      <td>38117</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64.30</td>\n",
       "      <td>33.900000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>23.824842</td>\n",
       "      <td>16.138954</td>\n",
       "      <td>18.150067</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38108</th>\n",
       "      <td>38118</td>\n",
       "      <td>NaN</td>\n",
       "      <td>48.40</td>\n",
       "      <td>30.200000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112</td>\n",
       "      <td>74</td>\n",
       "      <td>5.589210</td>\n",
       "      <td>2.796465</td>\n",
       "      <td>4.965659</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38109</th>\n",
       "      <td>38119</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.90</td>\n",
       "      <td>24.067452</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>33.694615</td>\n",
       "      <td>30.343295</td>\n",
       "      <td>32.223702</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38110</th>\n",
       "      <td>38120</td>\n",
       "      <td>NaN</td>\n",
       "      <td>69.70</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "      <td>17.103273</td>\n",
       "      <td>18.208483</td>\n",
       "      <td>20.291995</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38111</th>\n",
       "      <td>38121</td>\n",
       "      <td>NaN</td>\n",
       "      <td>39.60</td>\n",
       "      <td>18.900000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>127</td>\n",
       "      <td>41</td>\n",
       "      <td>3.052608</td>\n",
       "      <td>4.292587</td>\n",
       "      <td>6.386919</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38112</th>\n",
       "      <td>38122</td>\n",
       "      <td>NaN</td>\n",
       "      <td>33.89</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>185</td>\n",
       "      <td>111</td>\n",
       "      <td>2.204533</td>\n",
       "      <td>0.374714</td>\n",
       "      <td>2.902738</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38113</th>\n",
       "      <td>38123</td>\n",
       "      <td>NaN</td>\n",
       "      <td>27.27</td>\n",
       "      <td>18.400030</td>\n",
       "      <td>1.0</td>\n",
       "      <td>153</td>\n",
       "      <td>96</td>\n",
       "      <td>3.561581</td>\n",
       "      <td>2.351515</td>\n",
       "      <td>4.798116</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38114</th>\n",
       "      <td>38124</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64.00</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>25.699461</td>\n",
       "      <td>19.868997</td>\n",
       "      <td>21.905792</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38115</th>\n",
       "      <td>38125</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54.60</td>\n",
       "      <td>32.200000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>48</td>\n",
       "      <td>31</td>\n",
       "      <td>15.549413</td>\n",
       "      <td>11.854601</td>\n",
       "      <td>13.991498</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38116</th>\n",
       "      <td>38126</td>\n",
       "      <td>NaN</td>\n",
       "      <td>62.39</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>131</td>\n",
       "      <td>74</td>\n",
       "      <td>4.902700</td>\n",
       "      <td>3.124486</td>\n",
       "      <td>5.278198</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38117</th>\n",
       "      <td>38127</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19.91</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>185</td>\n",
       "      <td>111</td>\n",
       "      <td>2.204533</td>\n",
       "      <td>0.374714</td>\n",
       "      <td>2.902738</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38118</th>\n",
       "      <td>38128</td>\n",
       "      <td>NaN</td>\n",
       "      <td>23.56</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>42.105921</td>\n",
       "      <td>33.679984</td>\n",
       "      <td>35.706348</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38119</th>\n",
       "      <td>38129</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41.68</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>29.578033</td>\n",
       "      <td>26.750743</td>\n",
       "      <td>28.789359</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38120</th>\n",
       "      <td>38130</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50.28</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>29</td>\n",
       "      <td>19</td>\n",
       "      <td>23.129586</td>\n",
       "      <td>15.011030</td>\n",
       "      <td>16.992939</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38121</th>\n",
       "      <td>38131</td>\n",
       "      <td>NaN</td>\n",
       "      <td>52.20</td>\n",
       "      <td>31.800000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>75</td>\n",
       "      <td>52</td>\n",
       "      <td>13.988172</td>\n",
       "      <td>10.897396</td>\n",
       "      <td>12.812710</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38122</th>\n",
       "      <td>38132</td>\n",
       "      <td>NaN</td>\n",
       "      <td>54.09</td>\n",
       "      <td>37.082590</td>\n",
       "      <td>2.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>30.195354</td>\n",
       "      <td>27.271396</td>\n",
       "      <td>29.133765</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38123</th>\n",
       "      <td>38133</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41.08</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>203</td>\n",
       "      <td>101</td>\n",
       "      <td>4.060430</td>\n",
       "      <td>2.185333</td>\n",
       "      <td>0.072897</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38124</th>\n",
       "      <td>38134</td>\n",
       "      <td>NaN</td>\n",
       "      <td>34.80</td>\n",
       "      <td>19.800000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>43</td>\n",
       "      <td>30</td>\n",
       "      <td>17.433375</td>\n",
       "      <td>14.883070</td>\n",
       "      <td>17.137752</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38125</th>\n",
       "      <td>38135</td>\n",
       "      <td>NaN</td>\n",
       "      <td>63.00</td>\n",
       "      <td>43.800000</td>\n",
       "      <td>3.0</td>\n",
       "      <td>42</td>\n",
       "      <td>41</td>\n",
       "      <td>12.410939</td>\n",
       "      <td>10.973250</td>\n",
       "      <td>13.037478</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>38126 rows × 207 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id   price_doc  full_sq    life_sq  num_room  sport_count_5000  \\\n",
       "0          1   5850000.0    43.00  27.000000       2.0                52   \n",
       "1          2   6000000.0    34.00  19.000000       2.0                66   \n",
       "2          3   5700000.0    43.00  29.000000       2.0                67   \n",
       "3          4  13100000.0    89.00  50.000000       2.0                26   \n",
       "4          5  16331452.0    77.00  77.000000       2.0               195   \n",
       "5          6   9100000.0    67.00  46.000000       2.0               113   \n",
       "6          7   5500000.0    25.00  14.000000       2.0               127   \n",
       "7          8   2000000.0    44.00  44.000000       2.0                47   \n",
       "8          9   5300000.0    42.00  27.000000       2.0                85   \n",
       "9         10   2000000.0    36.00  21.000000       2.0                67   \n",
       "10        11   4650000.0    36.00  19.000000       1.0                17   \n",
       "11        12   4800000.0    38.00  19.000000       2.0                35   \n",
       "12        13   5100000.0    43.00  28.000000       2.0                47   \n",
       "13        14   5200000.0    31.00  31.000000       2.0               166   \n",
       "14        15   5000000.0    31.00  21.000000       2.0               132   \n",
       "15        16   1850000.0    51.00  31.000000       2.0                53   \n",
       "16        17   6300000.0    47.00  31.000000       2.0                62   \n",
       "17        18   5900000.0    42.00  28.000000       2.0                72   \n",
       "18        19   7900000.0    59.00  33.000000       1.0                17   \n",
       "19        20   5200000.0    44.00  29.000000       2.0                51   \n",
       "20        21   8200000.0    74.00  44.000000       2.0                 0   \n",
       "21        22   5200000.0    39.00  39.000000       2.0                64   \n",
       "22        23   6250000.0    48.00  34.000000       2.0                55   \n",
       "23        24   5750000.0    32.00  18.000000       2.0                42   \n",
       "24        25   6000000.0    34.00  19.000000       2.0                56   \n",
       "25        26   1050000.0    45.00  29.000000       2.0                70   \n",
       "26        27   5000000.0    35.00  20.000000       2.0                84   \n",
       "27        28   4700000.0    38.00  20.000000       2.0                11   \n",
       "28        29   8254400.0    73.00  38.000000       2.0                98   \n",
       "29        30   5900000.0    42.00  27.000000       2.0                73   \n",
       "...      ...         ...      ...        ...       ...               ...   \n",
       "38096  38106         NaN    44.40  27.900000       2.0                65   \n",
       "38097  38107         NaN    37.93  37.930000       1.0                 6   \n",
       "38098  38108         NaN    64.60  46.200000       3.0                79   \n",
       "38099  38109         NaN    42.23   1.000000       1.0                72   \n",
       "38100  38110         NaN    57.90  36.900000       3.0                 0   \n",
       "38101  38111         NaN    54.09  54.090000       2.0                 0   \n",
       "38102  38112         NaN    36.50  20.551729       1.0                 3   \n",
       "38103  38113         NaN    51.30  30.600000       2.0                52   \n",
       "38104  38114         NaN    77.51   1.000000       3.0               203   \n",
       "38105  38115         NaN    36.00  36.000000       1.0                 3   \n",
       "38106  38116         NaN    43.71  43.710000       1.0                90   \n",
       "38107  38117         NaN    64.30  33.900000       2.0                11   \n",
       "38108  38118         NaN    48.40  30.200000       1.0               112   \n",
       "38109  38119         NaN    39.90  24.067452       1.0                 3   \n",
       "38110  38120         NaN    69.70   1.000000       2.0                 8   \n",
       "38111  38121         NaN    39.60  18.900000       1.0               127   \n",
       "38112  38122         NaN    33.89   1.000000       1.0               185   \n",
       "38113  38123         NaN    27.27  18.400030       1.0               153   \n",
       "38114  38124         NaN    64.00   1.000000       2.0                11   \n",
       "38115  38125         NaN    54.60  32.200000       2.0                48   \n",
       "38116  38126         NaN    62.39  40.000000       2.0               131   \n",
       "38117  38127         NaN    19.91   1.000000       1.0               185   \n",
       "38118  38128         NaN    23.56   1.000000       1.0                 0   \n",
       "38119  38129         NaN    41.68   1.000000       1.0                 3   \n",
       "38120  38130         NaN    50.28   1.000000       1.0                29   \n",
       "38121  38131         NaN    52.20  31.800000       2.0                75   \n",
       "38122  38132         NaN    54.09  37.082590       2.0                 0   \n",
       "38123  38133         NaN    41.08   1.000000       1.0               203   \n",
       "38124  38134         NaN    34.80  19.800000       1.0                43   \n",
       "38125  38135         NaN    63.00  43.800000       3.0                42   \n",
       "\n",
       "       trc_count_5000  zd_vokzaly_avto_km  sadovoe_km  kremlin_km     ...      \\\n",
       "0                  52           14.231961   13.100618   15.156211     ...       \n",
       "1                  40            9.242586    6.444333    8.698054     ...       \n",
       "2                  35            9.540544    6.963403    9.067885     ...       \n",
       "3                  22           17.478380   17.457198   19.487005     ...       \n",
       "4                 114            1.595898    0.046810    2.578671     ...       \n",
       "5                  63            5.070197    3.519389    5.645796     ...       \n",
       "6                  49            3.028547    3.940566    6.468719     ...       \n",
       "7                  45           14.434462   13.713752   15.770426     ...       \n",
       "8                  41            7.500715    8.290837   10.357535     ...       \n",
       "9                  32           10.229145    8.955785   10.869120     ...       \n",
       "10                 20           22.634270   14.969009   17.066796     ...       \n",
       "11                 35           14.922287   14.064827   16.137704     ...       \n",
       "12                 27           12.434540   11.288612   13.202861     ...       \n",
       "13                 61            4.113420    2.539289    4.450091     ...       \n",
       "14                 72            4.912176    3.331354    5.469216     ...       \n",
       "15                 36           15.831816   11.908445   14.118600     ...       \n",
       "16                 27           10.577456    8.210706   10.313522     ...       \n",
       "17                 48           10.876432    6.856826    8.927901     ...       \n",
       "18                 17           22.990348   15.327266   17.423687     ...       \n",
       "19                 20            9.129001    9.449468   11.991410     ...       \n",
       "20                  2           28.618302   25.135369   27.174806     ...       \n",
       "21                 46           12.706450   11.885438   13.918482     ...       \n",
       "22                 49           16.354783   14.193228   16.220133     ...       \n",
       "23                 39           14.889761   13.146072   15.204932     ...       \n",
       "24                 52           14.430812   13.743761   15.765957     ...       \n",
       "25                 36            9.591853    8.245829   10.152502     ...       \n",
       "26                 52           11.778843   10.182335   12.245380     ...       \n",
       "27                  8           23.732453   17.657139   19.688472     ...       \n",
       "28                 34            6.453580    6.539704    9.068352     ...       \n",
       "29                 21            9.914711    9.327565   11.551600     ...       \n",
       "...               ...                 ...         ...         ...     ...       \n",
       "38096              53            9.784584   11.302480   13.396565     ...       \n",
       "38097               1           29.502495   26.124079   28.151572     ...       \n",
       "38098              49           12.035916    9.116804   10.983142     ...       \n",
       "38099              25           10.234785    8.935639   11.228779     ...       \n",
       "38100               0           51.759024   37.100352   39.050348     ...       \n",
       "38101               0           30.195354   27.271396   29.133765     ...       \n",
       "38102               0           34.620031   31.590605   33.464853     ...       \n",
       "38103              39           16.355877   12.477108   14.713940     ...       \n",
       "38104             101            4.060430    2.185333    0.072897     ...       \n",
       "38105               0           34.620031   31.590605   33.464853     ...       \n",
       "38106              35            7.325533    8.487426   10.598351     ...       \n",
       "38107              11           23.824842   16.138954   18.150067     ...       \n",
       "38108              74            5.589210    2.796465    4.965659     ...       \n",
       "38109               0           33.694615   30.343295   32.223702     ...       \n",
       "38110              10           17.103273   18.208483   20.291995     ...       \n",
       "38111              41            3.052608    4.292587    6.386919     ...       \n",
       "38112             111            2.204533    0.374714    2.902738     ...       \n",
       "38113              96            3.561581    2.351515    4.798116     ...       \n",
       "38114               4           25.699461   19.868997   21.905792     ...       \n",
       "38115              31           15.549413   11.854601   13.991498     ...       \n",
       "38116              74            4.902700    3.124486    5.278198     ...       \n",
       "38117             111            2.204533    0.374714    2.902738     ...       \n",
       "38118               0           42.105921   33.679984   35.706348     ...       \n",
       "38119               1           29.578033   26.750743   28.789359     ...       \n",
       "38120              19           23.129586   15.011030   16.992939     ...       \n",
       "38121              52           13.988172   10.897396   12.812710     ...       \n",
       "38122               0           30.195354   27.271396   29.133765     ...       \n",
       "38123             101            4.060430    2.185333    0.072897     ...       \n",
       "38124              30           17.433375   14.883070   17.137752     ...       \n",
       "38125              41           12.410939   10.973250   13.037478     ...       \n",
       "\n",
       "       sub_area_142  sub_area_143  sub_area_144  sub_area_145  material_0  \\\n",
       "0                 0             0             0             0           1   \n",
       "1                 0             0             0             0           1   \n",
       "2                 0             0             0             0           1   \n",
       "3                 0             0             0             0           1   \n",
       "4                 0             0             0             0           1   \n",
       "5                 0             0             0             0           1   \n",
       "6                 0             0             0             0           1   \n",
       "7                 0             0             0             0           1   \n",
       "8                 0             0             0             0           1   \n",
       "9                 0             0             0             0           1   \n",
       "10                0             0             0             0           1   \n",
       "11                0             1             0             0           1   \n",
       "12                0             0             0             0           1   \n",
       "13                0             0             0             0           1   \n",
       "14                0             0             0             0           1   \n",
       "15                0             0             0             0           1   \n",
       "16                0             0             0             0           1   \n",
       "17                0             0             0             0           1   \n",
       "18                0             0             0             0           1   \n",
       "19                0             0             0             0           1   \n",
       "20                0             0             0             0           1   \n",
       "21                0             0             0             0           1   \n",
       "22                0             0             0             0           1   \n",
       "23                0             0             0             0           1   \n",
       "24                0             0             0             0           1   \n",
       "25                0             0             0             0           1   \n",
       "26                0             0             0             0           1   \n",
       "27                0             0             0             0           1   \n",
       "28                0             0             0             0           1   \n",
       "29                0             0             0             0           1   \n",
       "...             ...           ...           ...           ...         ...   \n",
       "38096             0             1             0             0           1   \n",
       "38097             0             0             0             0           1   \n",
       "38098             0             0             0             0           0   \n",
       "38099             0             0             0             0           1   \n",
       "38100             0             0             0             0           1   \n",
       "38101             0             0             0             0           0   \n",
       "38102             0             0             0             0           1   \n",
       "38103             0             0             0             0           1   \n",
       "38104             0             0             0             0           1   \n",
       "38105             0             0             0             0           1   \n",
       "38106             0             0             0             0           1   \n",
       "38107             0             0             0             0           1   \n",
       "38108             0             0             0             0           0   \n",
       "38109             0             0             0             0           1   \n",
       "38110             0             0             0             0           0   \n",
       "38111             0             0             0             0           1   \n",
       "38112             0             0             0             0           1   \n",
       "38113             0             0             0             0           1   \n",
       "38114             0             0             0             0           1   \n",
       "38115             0             0             0             0           1   \n",
       "38116             0             0             0             0           1   \n",
       "38117             0             0             0             0           1   \n",
       "38118             0             0             0             0           1   \n",
       "38119             0             0             0             0           1   \n",
       "38120             0             0             0             0           1   \n",
       "38121             0             0             0             0           0   \n",
       "38122             0             0             0             0           1   \n",
       "38123             0             0             0             0           1   \n",
       "38124             0             0             0             0           0   \n",
       "38125             0             0             0             0           1   \n",
       "\n",
       "       material_1  material_2  material_3  material_4  material_5  \n",
       "0               0           0           0           0           0  \n",
       "1               0           0           0           0           0  \n",
       "2               0           0           0           0           0  \n",
       "3               0           0           0           0           0  \n",
       "4               0           0           0           0           0  \n",
       "5               0           0           0           0           0  \n",
       "6               0           0           0           0           0  \n",
       "7               0           0           0           0           0  \n",
       "8               0           0           0           0           0  \n",
       "9               0           0           0           0           0  \n",
       "10              0           0           0           0           0  \n",
       "11              0           0           0           0           0  \n",
       "12              0           0           0           0           0  \n",
       "13              0           0           0           0           0  \n",
       "14              0           0           0           0           0  \n",
       "15              0           0           0           0           0  \n",
       "16              0           0           0           0           0  \n",
       "17              0           0           0           0           0  \n",
       "18              0           0           0           0           0  \n",
       "19              0           0           0           0           0  \n",
       "20              0           0           0           0           0  \n",
       "21              0           0           0           0           0  \n",
       "22              0           0           0           0           0  \n",
       "23              0           0           0           0           0  \n",
       "24              0           0           0           0           0  \n",
       "25              0           0           0           0           0  \n",
       "26              0           0           0           0           0  \n",
       "27              0           0           0           0           0  \n",
       "28              0           0           0           0           0  \n",
       "29              0           0           0           0           0  \n",
       "...           ...         ...         ...         ...         ...  \n",
       "38096           0           0           0           0           0  \n",
       "38097           0           0           0           0           0  \n",
       "38098           0           0           0           1           0  \n",
       "38099           0           0           0           0           0  \n",
       "38100           0           0           0           0           0  \n",
       "38101           0           0           1           0           0  \n",
       "38102           0           0           0           0           0  \n",
       "38103           0           0           0           0           0  \n",
       "38104           0           0           0           0           0  \n",
       "38105           0           0           0           0           0  \n",
       "38106           0           0           0           0           0  \n",
       "38107           0           0           0           0           0  \n",
       "38108           0           0           0           0           1  \n",
       "38109           0           0           0           0           0  \n",
       "38110           0           0           1           0           0  \n",
       "38111           0           0           0           0           0  \n",
       "38112           0           0           0           0           0  \n",
       "38113           0           0           0           0           0  \n",
       "38114           0           0           0           0           0  \n",
       "38115           0           0           0           0           0  \n",
       "38116           0           0           0           0           0  \n",
       "38117           0           0           0           0           0  \n",
       "38118           0           0           0           0           0  \n",
       "38119           0           0           0           0           0  \n",
       "38120           0           0           0           0           0  \n",
       "38121           0           0           0           1           0  \n",
       "38122           0           0           0           0           0  \n",
       "38123           0           0           0           0           0  \n",
       "38124           0           0           0           1           0  \n",
       "38125           0           0           0           0           0  \n",
       "\n",
       "[38126 rows x 207 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['id', 'price_doc', 'full_sq', 'life_sq', 'num_room',\n",
       "       'sport_count_5000', 'trc_count_5000', 'zd_vokzaly_avto_km',\n",
       "       'sadovoe_km', 'kremlin_km', 'bulvar_ring_km', 'ttk_km',\n",
       "       'office_sqm_5000', 'nuclear_reactor_km', 'sport_objects_raion',\n",
       "       'cafe_count_5000_price_1000', 'stadium_km', 'kitch_sq',\n",
       "       'university_km', 'theater_km', 'swim_pool_km', 'catering_km',\n",
       "       'thermal_power_plant_km', 'workplaces_km', 'market_count_5000',\n",
       "       'school_education_centers_raion', 'big_church_km', 'metro_min_avto',\n",
       "       'healthcare_centers_raion', 'shopping_centers_km',\n",
       "       'mosque_count_5000', 'public_healthcare_km', 'ekder_all', 'area_m',\n",
       "       'university_top_20_raion', 'leisure_count_500', 'big_road2_km',\n",
       "       'bus_terminal_avto_km', 'ratio_brick', 'green_part_5000',\n",
       "       'ice_rink_km', 'raion_popul', 'hospice_morgue_km',\n",
       "       'additional_education_km', 'school_km', 'ratio_1920',\n",
       "       'railroad_station_avto_min', 'OKRUG', 'train_or_test', 'OKRUG_0',\n",
       "       'OKRUG_1', 'OKRUG_2', 'OKRUG_3', 'OKRUG_4', 'OKRUG_5', 'OKRUG_6',\n",
       "       'OKRUG_7', 'OKRUG_8', 'OKRUG_9', 'OKRUG_10', 'OKRUG_11'], dtype=object)"
      ]
     },
     "execution_count": 297,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total1.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "labels ['OKRUG'] not contained in axis",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-47-bfe0c1ee8f18>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtotal1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"OKRUG\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mTrue\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m/Users/mac/anaconda2/lib/python2.7/site-packages/pandas/core/generic.pyc\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, level, inplace, errors)\u001b[0m\n\u001b[1;32m   2048\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2049\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 2050\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   2051\u001b[0m             \u001b[0mdropped\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   2052\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m/Users/mac/anaconda2/lib/python2.7/site-packages/pandas/core/indexes/base.pyc\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   3573\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m'ignore'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3574\u001b[0m                 raise ValueError('labels %s not contained in axis' %\n\u001b[0;32m-> 3575\u001b[0;31m                                  labels[mask])\n\u001b[0m\u001b[1;32m   3576\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3577\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: labels ['OKRUG'] not contained in axis"
     ]
    }
   ],
   "source": [
    "total1.drop([\"OKRUG\"],inplace= True,axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "test = total1[total1[\"train_or_test\"]==\"test\"]\n",
    "train = total1[total1[\"train_or_test\"]==\"train\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "test = test.drop([\"id\",\"train_or_test\",\"price_doc\"], axis= 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "train = train.drop([\"id\",\"train_or_test\"], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "train[\"log_price\"] = train[\"price_doc\"].apply(np.log)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "train = train.drop([\"price_doc\"], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30464, 58)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7662, 57)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30464, 58)"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['full_sq', 'life_sq', 'num_room', 'sport_count_5000',\n",
       "       'trc_count_5000', 'zd_vokzaly_avto_km', 'sadovoe_km', 'kremlin_km',\n",
       "       'bulvar_ring_km', 'ttk_km', 'office_sqm_5000', 'nuclear_reactor_km',\n",
       "       'sport_objects_raion', 'cafe_count_5000_price_1000', 'stadium_km',\n",
       "       'kitch_sq', 'university_km', 'theater_km', 'swim_pool_km',\n",
       "       'catering_km', 'thermal_power_plant_km', 'workplaces_km',\n",
       "       'market_count_5000', 'school_education_centers_raion',\n",
       "       'big_church_km', 'metro_min_avto', 'healthcare_centers_raion',\n",
       "       'shopping_centers_km', 'mosque_count_5000', 'public_healthcare_km',\n",
       "       'ekder_all', 'area_m', 'university_top_20_raion',\n",
       "       'leisure_count_500', 'big_road2_km', 'bus_terminal_avto_km',\n",
       "       'ratio_brick', 'green_part_5000', 'ice_rink_km', 'raion_popul',\n",
       "       'hospice_morgue_km', 'additional_education_km', 'school_km',\n",
       "       'ratio_1920', 'railroad_station_avto_min', 'OKRUG_0', 'OKRUG_1',\n",
       "       'OKRUG_2', 'OKRUG_3', 'OKRUG_4', 'OKRUG_5', 'OKRUG_6', 'OKRUG_7',\n",
       "       'OKRUG_8', 'OKRUG_9', 'OKRUG_10', 'OKRUG_11', 'log_price'], dtype=object)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "total_data = train.iloc[:,0:57]\n",
    "total_target = train[\"log_price\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 309,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(30464, 57)"
      ]
     },
     "execution_count": 309,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "full_sq                           0\n",
       "life_sq                           0\n",
       "num_room                          0\n",
       "sport_count_5000                  0\n",
       "trc_count_5000                    0\n",
       "zd_vokzaly_avto_km                0\n",
       "sadovoe_km                        0\n",
       "kremlin_km                        0\n",
       "bulvar_ring_km                    0\n",
       "ttk_km                            0\n",
       "office_sqm_5000                   0\n",
       "nuclear_reactor_km                0\n",
       "sport_objects_raion               0\n",
       "cafe_count_5000_price_1000        0\n",
       "stadium_km                        0\n",
       "kitch_sq                          0\n",
       "university_km                     0\n",
       "theater_km                        0\n",
       "swim_pool_km                      0\n",
       "catering_km                       0\n",
       "thermal_power_plant_km            0\n",
       "workplaces_km                     0\n",
       "market_count_5000                 0\n",
       "school_education_centers_raion    0\n",
       "big_church_km                     0\n",
       "metro_min_avto                    0\n",
       "healthcare_centers_raion          0\n",
       "shopping_centers_km               0\n",
       "mosque_count_5000                 0\n",
       "public_healthcare_km              0\n",
       "ekder_all                         0\n",
       "area_m                            0\n",
       "university_top_20_raion           0\n",
       "leisure_count_500                 0\n",
       "big_road2_km                      0\n",
       "bus_terminal_avto_km              0\n",
       "ratio_brick                       0\n",
       "green_part_5000                   0\n",
       "ice_rink_km                       0\n",
       "raion_popul                       0\n",
       "hospice_morgue_km                 0\n",
       "additional_education_km           0\n",
       "school_km                         0\n",
       "ratio_1920                        0\n",
       "railroad_station_avto_min         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = pd.isnull(total_data)\n",
    "x.apply(sum)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(bootstrap=True, criterion='mse', max_depth=None,\n",
       "           max_features='auto', max_leaf_nodes=None,\n",
       "           min_impurity_split=1e-07, min_samples_leaf=1,\n",
       "           min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "           n_estimators=10, n_jobs=1, oob_score=False, random_state=None,\n",
       "           verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cross_validation import train_test_split\n",
    "data_train, data_test, target_train, target_test = train_test_split(total_data, total_target, test_size=0.3 )\n",
    "randomForest.fit(data_train, target_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.86790514552538611"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "randomForest.score(data_train, target_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "randomForest1 = ensemble.RandomForestRegressor(max_depth = 10, oob_score = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'bootstrap': True,\n",
       " 'criterion': 'mse',\n",
       " 'max_depth': 10,\n",
       " 'max_features': 'auto',\n",
       " 'max_leaf_nodes': None,\n",
       " 'min_impurity_split': 1e-07,\n",
       " 'min_samples_leaf': 1,\n",
       " 'min_samples_split': 2,\n",
       " 'min_weight_fraction_leaf': 0.0,\n",
       " 'n_estimators': 10,\n",
       " 'n_jobs': 1,\n",
       " 'oob_score': True,\n",
       " 'random_state': None,\n",
       " 'verbose': 0,\n",
       " 'warm_start': False}"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "randomForest1.get_params()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "max_features = range(7,12,1)\n",
    "n_estimators = range(100,600,100)\n",
    "grid_para_forest = {\n",
    "    'max_features': max_features,\n",
    "    'n_estimators': n_estimators\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import GridSearchCV\n",
    "para_search = GridSearchCV(estimator = randomForest1, \n",
    "                           param_grid = grid_para_forest, cv=10).fit(total_data, total_target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0.52664565,  0.52708758,  0.5272154 ,  0.52685429,  0.52750917,\n",
       "         0.53090693,  0.53227979,  0.53287544,  0.53293374,  0.53299758,\n",
       "         0.53570139,  0.53637156,  0.53671423,  0.53684567,  0.53682553,\n",
       "         0.53791231,  0.53902389,  0.53916342,  0.53928031,  0.53923002,\n",
       "         0.53907642,  0.54055784,  0.5407657 ,  0.54112326,  0.54111913,\n",
       "         0.54155889,  0.54180296,  0.5421279 ,  0.54198233,  0.54190677,\n",
       "         0.54201277,  0.54252989,  0.54311888,  0.54307775,  0.54299769]),\n",
       " array([ 0.38238796,  0.3846563 ,  0.38396525,  0.38414121,  0.384928  ,\n",
       "         0.38244296,  0.38445081,  0.38470242,  0.38455813,  0.38482802,\n",
       "         0.38267741,  0.38288083,  0.38401852,  0.3839173 ,  0.38432407,\n",
       "         0.38218657,  0.38328734,  0.38320948,  0.38336253,  0.38387744,\n",
       "         0.3810284 ,  0.38248366,  0.38296808,  0.38251883,  0.3827397 ,\n",
       "         0.38069576,  0.38099704,  0.38148382,  0.38165902,  0.38189745,\n",
       "         0.37983323,  0.38086851,  0.38160901,  0.38107184,  0.38120243]))"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "para_search.cv_results_.get(\"mean_train_score\"),para_search.cv_results_.get(\"mean_test_score\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'mean_fit_time': array([  9.78176842,  19.6516315 ,  31.34323366,  43.29873998,\n",
       "         56.18187673,  12.97680182,  24.8214026 ,  41.14804513,\n",
       "         52.84622958,  52.11921992,   8.88044338,  18.67005825,\n",
       "         28.22328529,  36.92778125,  44.85180175,   9.61881409,\n",
       "         20.59223449,  32.43732734,  45.55084078,  52.71757991,\n",
       "         10.3940552 ,  21.8848923 ,  33.189733  ,  46.54284863,  56.63957989]),\n",
       " 'mean_score_time': array([ 0.1490912 ,  0.32984788,  0.46287138,  0.70176804,  0.88569233,\n",
       "         0.17108819,  0.36436729,  0.55186548,  0.79493351,  0.66646183,\n",
       "         0.10200481,  0.21806254,  0.31523731,  0.42659338,  0.57176766,\n",
       "         0.10179627,  0.22220042,  0.34182632,  0.5078146 ,  0.55645916,\n",
       "         0.10039222,  0.20531952,  0.32070789,  0.45702858,  0.5370976 ]),\n",
       " 'mean_test_score': array([ 0.37863686,  0.37953096,  0.37966102,  0.37986794,  0.37973797,\n",
       "         0.38045668,  0.38099834,  0.38184989,  0.38219526,  0.38172444,\n",
       "         0.38119144,  0.3822939 ,  0.38313403,  0.38275819,  0.3828958 ,\n",
       "         0.38267599,  0.38300987,  0.38336637,  0.38377055,  0.38378116,\n",
       "         0.38334488,  0.38314824,  0.38435472,  0.38454862,  0.38454613]),\n",
       " 'mean_train_score': array([ 0.5072811 ,  0.50768607,  0.50826947,  0.50840777,  0.50820928,\n",
       "         0.5132645 ,  0.51318471,  0.51372204,  0.51357902,  0.5138921 ,\n",
       "         0.51627562,  0.51764098,  0.51813916,  0.51823802,  0.51825359,\n",
       "         0.5209542 ,  0.52104614,  0.52163895,  0.52190087,  0.52169784,\n",
       "         0.52387472,  0.52391044,  0.5246618 ,  0.52523433,  0.52494453]),\n",
       " 'param_max_features': masked_array(data = [7 7 7 7 7 8 8 8 8 8 9 9 9 9 9 10 10 10 10 10 11 11 11 11 11],\n",
       "              mask = [False False False False False False False False False False False False\n",
       "  False False False False False False False False False False False False\n",
       "  False],\n",
       "        fill_value = ?),\n",
       " 'param_n_estimators': masked_array(data = [100 200 300 400 500 100 200 300 400 500 100 200 300 400 500 100 200 300\n",
       "  400 500 100 200 300 400 500],\n",
       "              mask = [False False False False False False False False False False False False\n",
       "  False False False False False False False False False False False False\n",
       "  False],\n",
       "        fill_value = ?),\n",
       " 'params': ({'max_features': 7, 'n_estimators': 100},\n",
       "  {'max_features': 7, 'n_estimators': 200},\n",
       "  {'max_features': 7, 'n_estimators': 300},\n",
       "  {'max_features': 7, 'n_estimators': 400},\n",
       "  {'max_features': 7, 'n_estimators': 500},\n",
       "  {'max_features': 8, 'n_estimators': 100},\n",
       "  {'max_features': 8, 'n_estimators': 200},\n",
       "  {'max_features': 8, 'n_estimators': 300},\n",
       "  {'max_features': 8, 'n_estimators': 400},\n",
       "  {'max_features': 8, 'n_estimators': 500},\n",
       "  {'max_features': 9, 'n_estimators': 100},\n",
       "  {'max_features': 9, 'n_estimators': 200},\n",
       "  {'max_features': 9, 'n_estimators': 300},\n",
       "  {'max_features': 9, 'n_estimators': 400},\n",
       "  {'max_features': 9, 'n_estimators': 500},\n",
       "  {'max_features': 10, 'n_estimators': 100},\n",
       "  {'max_features': 10, 'n_estimators': 200},\n",
       "  {'max_features': 10, 'n_estimators': 300},\n",
       "  {'max_features': 10, 'n_estimators': 400},\n",
       "  {'max_features': 10, 'n_estimators': 500},\n",
       "  {'max_features': 11, 'n_estimators': 100},\n",
       "  {'max_features': 11, 'n_estimators': 200},\n",
       "  {'max_features': 11, 'n_estimators': 300},\n",
       "  {'max_features': 11, 'n_estimators': 400},\n",
       "  {'max_features': 11, 'n_estimators': 500}),\n",
       " 'rank_test_score': array([25, 24, 23, 21, 22, 20, 19, 16, 15, 17, 18, 14,  9, 12, 11, 13, 10,\n",
       "         6,  5,  4,  7,  8,  3,  1,  2], dtype=int32),\n",
       " 'split0_test_score': array([ 0.12837151,  0.12915864,  0.13029546,  0.13008695,  0.1319647 ,\n",
       "         0.13031385,  0.12905789,  0.13015687,  0.13109662,  0.13092137,\n",
       "         0.12851403,  0.12900801,  0.13330656,  0.13036841,  0.12915689,\n",
       "         0.12859026,  0.13023504,  0.13003287,  0.12939289,  0.13195611,\n",
       "         0.13008413,  0.12731557,  0.13055357,  0.13058642,  0.13001652]),\n",
       " 'split0_train_score': array([ 0.54510254,  0.5433892 ,  0.54531006,  0.54452163,  0.54471096,\n",
       "         0.54845982,  0.55058644,  0.54932913,  0.55007118,  0.54989587,\n",
       "         0.55212422,  0.55267786,  0.55448884,  0.55276534,  0.554652  ,\n",
       "         0.55613923,  0.55576616,  0.55675215,  0.55701386,  0.55771527,\n",
       "         0.55786644,  0.55889038,  0.56059145,  0.56101372,  0.56004712]),\n",
       " 'split1_test_score': array([ 0.35515088,  0.36127485,  0.35784314,  0.35962853,  0.35893347,\n",
       "         0.36449701,  0.36534948,  0.36506344,  0.36667598,  0.36382492,\n",
       "         0.36369696,  0.36794328,  0.36978551,  0.37034263,  0.36961646,\n",
       "         0.37171779,  0.36998601,  0.37325908,  0.37224986,  0.37247736,\n",
       "         0.37245647,  0.37237656,  0.37382722,  0.37383678,  0.37576578]),\n",
       " 'split1_train_score': array([ 0.49897462,  0.50199275,  0.50212462,  0.50289361,  0.50121036,\n",
       "         0.50665435,  0.50543623,  0.50810975,  0.50720679,  0.50802504,\n",
       "         0.50901857,  0.51278067,  0.51229309,  0.51226209,  0.51226671,\n",
       "         0.51673126,  0.51569598,  0.51526587,  0.51643124,  0.51546326,\n",
       "         0.51772729,  0.51782726,  0.51911562,  0.51977364,  0.52001453]),\n",
       " 'split2_test_score': array([ 0.43022266,  0.42571504,  0.42741676,  0.42800807,  0.42683728,\n",
       "         0.42778365,  0.43066159,  0.43127762,  0.43059335,  0.43224815,\n",
       "         0.42997628,  0.43387935,  0.4345088 ,  0.43294464,  0.43293264,\n",
       "         0.4374225 ,  0.43299177,  0.43583226,  0.43452317,  0.43557169,\n",
       "         0.43496236,  0.43791353,  0.43788984,  0.43816392,  0.43847996]),\n",
       " 'split2_train_score': array([ 0.50361047,  0.50328382,  0.50328731,  0.50186671,  0.50283518,\n",
       "         0.50576649,  0.50869317,  0.50801359,  0.50724701,  0.50865969,\n",
       "         0.50796799,  0.51169982,  0.51258307,  0.51387784,  0.51206061,\n",
       "         0.51582606,  0.51613967,  0.51686678,  0.51592001,  0.51634951,\n",
       "         0.51998084,  0.51757056,  0.51921085,  0.52099422,  0.5188558 ]),\n",
       " 'split3_test_score': array([ 0.39469251,  0.39525163,  0.39347188,  0.393909  ,  0.39390723,\n",
       "         0.39227843,  0.3934209 ,  0.39432838,  0.39606285,  0.39463051,\n",
       "         0.39284731,  0.39330717,  0.39410515,  0.39585965,  0.39525494,\n",
       "         0.39297985,  0.3970849 ,  0.39568749,  0.39746021,  0.39815956,\n",
       "         0.3940455 ,  0.39446235,  0.39668958,  0.39665193,  0.39687391]),\n",
       " 'split3_train_score': array([ 0.50577783,  0.50694082,  0.50696123,  0.50731725,  0.50795729,\n",
       "         0.511658  ,  0.51014954,  0.51207305,  0.51342159,  0.51262602,\n",
       "         0.51535662,  0.51716373,  0.5167344 ,  0.51766419,  0.51662929,\n",
       "         0.51901968,  0.52054862,  0.52174685,  0.52117378,  0.52066178,\n",
       "         0.52140654,  0.52381957,  0.52286671,  0.52401103,  0.52470651]),\n",
       " 'split4_test_score': array([ 0.35778879,  0.36145336,  0.36030994,  0.36113193,  0.36026737,\n",
       "         0.36020891,  0.3608653 ,  0.36098102,  0.3606285 ,  0.35993761,\n",
       "         0.35787206,  0.36243943,  0.35976488,  0.35900428,  0.36064166,\n",
       "         0.3598866 ,  0.3594444 ,  0.35838936,  0.35867596,  0.3588761 ,\n",
       "         0.35810282,  0.35689621,  0.36007852,  0.35807959,  0.35793887]),\n",
       " 'split4_train_score': array([ 0.51114786,  0.51174516,  0.5122601 ,  0.51211161,  0.51310142,\n",
       "         0.51818543,  0.51842437,  0.5174623 ,  0.51747535,  0.51751914,\n",
       "         0.52015774,  0.52146755,  0.52131514,  0.52254144,  0.52317683,\n",
       "         0.52535164,  0.5246854 ,  0.52553101,  0.52707023,  0.52521537,\n",
       "         0.52872702,  0.52625497,  0.52991495,  0.52860149,  0.52960384]),\n",
       " 'split5_test_score': array([ 0.37546436,  0.37915509,  0.3791069 ,  0.37889855,  0.37862322,\n",
       "         0.37931752,  0.37873791,  0.3806707 ,  0.3806737 ,  0.37929671,\n",
       "         0.37800171,  0.37953757,  0.37911976,  0.3781141 ,  0.37943615,\n",
       "         0.37910831,  0.38024743,  0.37982943,  0.38000209,  0.37910948,\n",
       "         0.37877164,  0.3791058 ,  0.3782513 ,  0.37948071,  0.37856692]),\n",
       " 'split5_train_score': array([ 0.50641151,  0.506456  ,  0.50632542,  0.50809902,  0.50751232,\n",
       "         0.51317017,  0.51266617,  0.51264937,  0.51382367,  0.51373824,\n",
       "         0.51530512,  0.51652505,  0.51780253,  0.51820185,  0.51589308,\n",
       "         0.51937433,  0.51969495,  0.52011173,  0.52088473,  0.52118307,\n",
       "         0.52358325,  0.52347231,  0.52320639,  0.5243933 ,  0.52359114]),\n",
       " 'split6_test_score': array([ 0.37183206,  0.37011268,  0.37290123,  0.37030813,  0.37196103,\n",
       "         0.37015578,  0.37098181,  0.37235336,  0.37407659,  0.37344296,\n",
       "         0.37229828,  0.37249937,  0.37350446,  0.37396495,  0.37390171,\n",
       "         0.37253605,  0.37210236,  0.37346048,  0.37410187,  0.3733287 ,\n",
       "         0.37520021,  0.37303019,  0.37596308,  0.37517685,  0.37449155]),\n",
       " 'split6_train_score': array([ 0.50928365,  0.50792045,  0.51099175,  0.5112534 ,  0.50971891,\n",
       "         0.51417455,  0.5158637 ,  0.51531116,  0.51612563,  0.51633632,\n",
       "         0.52001968,  0.51848081,  0.52059455,  0.5196085 ,  0.52009425,\n",
       "         0.52332124,  0.52211613,  0.52327536,  0.52469429,  0.52461285,\n",
       "         0.52443693,  0.52542269,  0.52701662,  0.52791648,  0.526602  ]),\n",
       " 'split7_test_score': array([ 0.4778811 ,  0.47647993,  0.47711884,  0.47717304,  0.47730573,\n",
       "         0.47769692,  0.48024692,  0.48044496,  0.47856846,  0.47947316,\n",
       "         0.48210885,  0.48046862,  0.48082366,  0.48009992,  0.4815706 ,\n",
       "         0.48045407,  0.48037736,  0.48001463,  0.48343174,  0.48162761,\n",
       "         0.48292353,  0.48083442,  0.48247663,  0.48219606,  0.4818613 ]),\n",
       " 'split7_train_score': array([ 0.49683847,  0.4981329 ,  0.49751335,  0.4979983 ,  0.4981157 ,\n",
       "         0.50325719,  0.50269158,  0.50379908,  0.5043076 ,  0.50301322,\n",
       "         0.50476749,  0.50860902,  0.50780297,  0.50805864,  0.50902796,\n",
       "         0.50922837,  0.51089964,  0.51103621,  0.51093729,  0.51185778,\n",
       "         0.51538421,  0.51499971,  0.51423563,  0.51546227,  0.51494848]),\n",
       " 'split8_test_score': array([ 0.42226433,  0.41900965,  0.42080135,  0.42119329,  0.42031055,\n",
       "         0.42289689,  0.42135541,  0.42300211,  0.423065  ,  0.42351644,\n",
       "         0.4263638 ,  0.42407767,  0.42513867,  0.42586057,  0.42490605,\n",
       "         0.42409309,  0.42480947,  0.42426353,  0.42401239,  0.42525843,\n",
       "         0.42604121,  0.42762749,  0.42456625,  0.42668143,  0.4262211 ]),\n",
       " 'split8_train_score': array([ 0.50160312,  0.50167405,  0.50213689,  0.50221849,  0.50212711,\n",
       "         0.50950651,  0.50738512,  0.5096663 ,  0.50674605,  0.50774534,\n",
       "         0.51118179,  0.51204987,  0.51322153,  0.513874  ,  0.5134936 ,\n",
       "         0.51641701,  0.51664316,  0.51749237,  0.51626522,  0.51580946,\n",
       "         0.51993543,  0.5191706 ,  0.5205221 ,  0.51962933,  0.51948107]),\n",
       " 'split9_test_score': array([ 0.4727681 ,  0.47776659,  0.47741358,  0.47841014,  0.47733718,\n",
       "         0.47948574,  0.47937367,  0.48028822,  0.48057866,  0.48001995,\n",
       "         0.48030401,  0.47984586,  0.48134873,  0.48108891,  0.48160813,\n",
       "         0.48003708,  0.48288614,  0.4829598 ,  0.48392151,  0.48151123,\n",
       "         0.48092723,  0.48198611,  0.48331639,  0.48469782,  0.48531012]),\n",
       " 'split9_train_score': array([ 0.49406091,  0.49532557,  0.49578394,  0.49579763,  0.49480357,\n",
       "         0.5018125 ,  0.49995081,  0.50080664,  0.49936535,  0.50136211,\n",
       "         0.50685699,  0.50495544,  0.50455541,  0.50352636,  0.50524162,\n",
       "         0.50813318,  0.50827167,  0.50831115,  0.50861809,  0.50811001,\n",
       "         0.50969922,  0.5116763 ,  0.5099377 ,  0.51054782,  0.51159485]),\n",
       " 'std_fit_time': array([ 0.84050514,  2.22156834,  5.01103488,  3.0379908 ,  2.19469329,\n",
       "         0.77676265,  1.21304689,  3.03241202,  6.64667998,  8.13675704,\n",
       "         0.23425628,  2.66363592,  2.1846312 ,  2.97555778,  2.51835711,\n",
       "         0.18834377,  0.89487272,  2.30006259,  2.15368483,  2.41236921,\n",
       "         0.15021189,  1.34446637,  1.66353499,  1.01288642,  2.05847567]),\n",
       " 'std_score_time': array([ 0.02899447,  0.11125061,  0.05346399,  0.0644067 ,  0.15717182,\n",
       "         0.01382056,  0.05940106,  0.068951  ,  0.22839321,  0.10910369,\n",
       "         0.0056126 ,  0.0511032 ,  0.03905746,  0.03131147,  0.11037564,\n",
       "         0.00687344,  0.01878838,  0.04403678,  0.07089721,  0.05150099,\n",
       "         0.00642555,  0.01221604,  0.01936824,  0.02764395,  0.03178069]),\n",
       " 'std_test_score': array([ 0.09339055,  0.09296955,  0.09290166,  0.09308859,  0.09240425,\n",
       "         0.09316476,  0.09381755,  0.09373999,  0.09327755,  0.09352245,\n",
       "         0.09452996,  0.09410139,  0.09325795,  0.09392584,  0.09437181,\n",
       "         0.09443704,  0.09415739,  0.09426648,  0.0948334 ,  0.09382946,\n",
       "         0.09435802,  0.09529011,  0.09449325,  0.0947614 ,  0.09494152]),\n",
       " 'std_train_score': array([ 0.01360504,  0.01274871,  0.01331392,  0.01306209,  0.01324985,\n",
       "         0.01269518,  0.01357237,  0.01278302,  0.01329965,  0.01300754,\n",
       "         0.01297988,  0.0125582 ,  0.01311521,  0.01267551,  0.01308418,\n",
       "         0.01278967,  0.01249065,  0.0127426 ,  0.01289608,  0.01305016,\n",
       "         0.0123571 ,  0.01249128,  0.01316258,  0.013005  ,  0.01275891])}"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "para_search.cv_results_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['rank_test_score', 'split6_test_score', 'split7_train_score', 'split0_train_score', 'split2_test_score', 'mean_fit_time', 'split3_train_score', 'split6_train_score', 'split9_test_score', 'std_test_score', 'params', 'split8_test_score', 'std_score_time', 'std_fit_time', 'std_train_score', 'split4_test_score', 'split1_train_score', 'split2_train_score', 'param_n_estimators', 'split4_train_score', 'mean_score_time', 'split9_train_score', 'split5_test_score', 'mean_train_score', 'split8_train_score', 'split7_test_score', 'split0_test_score', 'mean_test_score', 'param_max_features', 'split3_test_score', 'split5_train_score', 'split1_test_score']\n"
     ]
    }
   ],
   "source": [
    "print(list(para_search.cv_results_.keys()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'para_search' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-6-83712571c436>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mpara_search\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbest_estimator_\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtotal_data\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mtotal_target\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'para_search' is not defined"
     ]
    }
   ],
   "source": [
    "x=para_search.best_estimator_.fit(total_data,total_target)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'max_features': 11, 'n_estimators': 400}"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "para_search.best_params_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "x=para_search.best_estimator_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "y=x.predict(test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "y=np.exp(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7662,)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "test_id = total1[total1[\"train_or_test\"]==\"test\"][[\"id\"]]       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "test_id = test_id.reset_index().drop(\"index\",axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "test_hat = pd.DataFrame(y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "test_hat.columns = [\"price_doc\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "final = pd.concat([test_id,test_hat],axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "final.to_csv(\"submission_n500_area_rf.csv\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'x' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-5-2a21f7ce95b3>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_importances_\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'x' is not defined"
     ]
    }
   ],
   "source": [
    "x.feature_importances_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([u'full_sq', u'life_sq', u'num_room', u'sport_count_5000',\n",
       "       u'trc_count_5000', u'zd_vokzaly_avto_km', u'sadovoe_km', u'kremlin_km',\n",
       "       u'bulvar_ring_km', u'ttk_km', u'office_sqm_5000', u'nuclear_reactor_km',\n",
       "       u'sport_objects_raion', u'cafe_count_5000_price_1000', u'stadium_km',\n",
       "       u'kitch_sq', u'university_km', u'theater_km', u'swim_pool_km',\n",
       "       u'catering_km', u'thermal_power_plant_km', u'workplaces_km',\n",
       "       u'market_count_5000', u'school_education_centers_raion',\n",
       "       u'big_church_km', u'metro_min_avto', u'healthcare_centers_raion',\n",
       "       u'shopping_centers_km', u'mosque_count_5000', u'public_healthcare_km',\n",
       "       u'ekder_all', u'area_m', u'university_top_20_raion',\n",
       "       u'leisure_count_500', u'big_road2_km', u'bus_terminal_avto_km',\n",
       "       u'ratio_brick', u'green_part_5000', u'ice_rink_km', u'raion_popul',\n",
       "       u'hospice_morgue_km', u'additional_education_km', u'school_km',\n",
       "       u'ratio_1920', u'railroad_station_avto_min', u'OKRUG_0', u'OKRUG_1',\n",
       "       u'OKRUG_2', u'OKRUG_3', u'OKRUG_4', u'OKRUG_5', u'OKRUG_6', u'OKRUG_7',\n",
       "       u'OKRUG_8', u'OKRUG_9', u'OKRUG_10', u'OKRUG_11'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'test' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-4-c234fa7a6b7a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mfeats\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0;34m}\u001b[0m \u001b[0;31m# a dict to hold feature_name: feature_importance\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mfeature\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimportance\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtest\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeature_importances_\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      8\u001b[0m     \u001b[0mfeats\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mfeature\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimportance\u001b[0m \u001b[0;31m#add the name/value pair\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mNameError\u001b[0m: name 'test' is not defined"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "from matplotlib import pyplot as plt\n",
    "#do code to support model\n",
    "#\"data\" is the X dataframe and model is the SKlearn object\n",
    "\n",
    "feats = {} # a dict to hold feature_name: feature_importance\n",
    "for feature, importance in zip(test.columns, x.feature_importances_):\n",
    "    feats[feature] = importance #add the name/value pair \n",
    "\n",
    "importances = pd.DataFrame.from_dict(feats, orient='index').rename(columns={0: 'Gini-importance'})\n",
    "importances.sort_values(by='Gini-importance',ascending=False).plot(kind='bar',figsize=(30,10), rot=45)\n",
    "plt.savefig('Gini_importance')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/mac/anaconda2/lib/python2.7/site-packages/sklearn/model_selection/_search.py:667: DeprecationWarning: The grid_scores_ attribute was deprecated in version 0.18 in favor of the more elaborate cv_results_ attribute. The grid_scores_ attribute will not be available from 0.20\n",
      "  DeprecationWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a61be90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "scores = [x[1] for x in para_search.grid_scores_]\n",
    "scores = np.array(scores).reshape(len(max_features), len(n_estimators))\n",
    "\n",
    "for ind, i in enumerate(max_features):\n",
    "    plt.plot(n_estimators, scores[ind], label='max_features: ' + str(i))\n",
    "\n",
    "plt.legend()\n",
    "plt.xlabel('n_estimators')\n",
    "plt.ylabel('Mean score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index([u'full_sq', u'life_sq', u'num_room', u'sport_count_5000',\n",
       "       u'trc_count_5000', u'zd_vokzaly_avto_km', u'sadovoe_km', u'kremlin_km',\n",
       "       u'bulvar_ring_km', u'ttk_km', u'office_sqm_5000', u'nuclear_reactor_km',\n",
       "       u'sport_objects_raion', u'cafe_count_5000_price_1000', u'stadium_km',\n",
       "       u'kitch_sq', u'university_km', u'theater_km', u'swim_pool_km',\n",
       "       u'catering_km', u'thermal_power_plant_km', u'workplaces_km',\n",
       "       u'market_count_5000', u'school_education_centers_raion',\n",
       "       u'big_church_km', u'metro_min_avto', u'healthcare_centers_raion',\n",
       "       u'shopping_centers_km', u'mosque_count_5000', u'public_healthcare_km',\n",
       "       u'ekder_all', u'area_m', u'university_top_20_raion',\n",
       "       u'leisure_count_500', u'big_road2_km', u'bus_terminal_avto_km',\n",
       "       u'ratio_brick', u'green_part_5000', u'ice_rink_km', u'raion_popul',\n",
       "       u'hospice_morgue_km', u'additional_education_km', u'school_km',\n",
       "       u'ratio_1920', u'railroad_station_avto_min'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#L.append(total.columns[12])\n",
    "\n",
    "#L.extend(total.columns[15:19])\n",
    "\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
