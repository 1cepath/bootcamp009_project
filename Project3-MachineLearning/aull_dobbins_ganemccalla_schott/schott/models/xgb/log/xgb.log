/home/mes/venv/lib/python2.7/site-packages/sklearn/cross_validation.py:44: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
/home/mes/venv/lib/python2.7/site-packages/sklearn/grid_search.py:43: DeprecationWarning: This module was deprecated in version 0.18 in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.
  DeprecationWarning)
2017-05-27 20:38:09.371142
Fitting 5 folds for each of 30 candidates, totalling 150 fits
[Parallel(n_jobs=4)]: Done  42 tasks      | elapsed: 14.4min
[Parallel(n_jobs=4)]: Done 150 out of 150 | elapsed: 94.8min finished
[mean: 0.32671, std: 0.08467, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 1, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 3}, mean: 0.33176, std: 0.08155, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 2, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 3}, mean: 0.33525, std: 0.08839, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 3, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 3}, mean: 0.33704, std: 0.08454, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 4, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 3}, mean: 0.33923, std: 0.08891, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 3}, mean: 0.29686, std: 0.08377, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 1, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 4}, mean: 0.29753, std: 0.08532, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 2, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 4}, mean: 0.29530, std: 0.08388, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 3, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 4}, mean: 0.29889, std: 0.08899, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 4, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 4}, mean: 0.29696, std: 0.08355, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 4}, mean: 0.24133, std: 0.07814, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 1, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 5}, mean: 0.24672, std: 0.08540, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 2, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 5}, mean: 0.24673, std: 0.07651, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 3, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 5}, mean: 0.25037, std: 0.07250, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 4, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 5}, mean: 0.25179, std: 0.07615, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 5}, mean: 0.19859, std: 0.08129, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 1, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 6}, mean: 0.19980, std: 0.08051, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 2, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 6}, mean: 0.20201, std: 0.07647, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 3, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 6}, mean: 0.21061, std: 0.07807, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 4, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 6}, mean: 0.21888, std: 0.07737, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 6}, mean: 0.17178, std: 0.07895, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 1, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 7}, mean: 0.17472, std: 0.07696, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 2, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 7}, mean: 0.18613, std: 0.08024, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 3, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 7}, mean: 0.18227, std: 0.08359, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 4, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 7}, mean: 0.17805, std: 0.07209, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 7}, mean: 0.15080, std: 0.07861, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 1, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 8}, mean: 0.15323, std: 0.07538, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 2, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 8}, mean: 0.15890, std: 0.07275, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 3, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 8}, mean: 0.15807, std: 0.06719, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 4, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 8}, mean: 0.16438, std: 0.08069, params: {'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 8}]
XGBRegressor(base_score=0.5, colsample_bylevel=1, colsample_bytree=0.8,
       gamma=0, learning_rate=0.4, max_delta_step=0, max_depth=3,
       min_child_weight=5, missing=None, n_estimators=250, nthread=-1,
       objective='reg:linear', reg_alpha=0, reg_lambda=1,
       scale_pos_weight=1, seed=0, silent=1, subsample=0.8)
0.339229805924
{'colsample_bytree': 0.8, 'silent': 1, 'learning_rate': 0.4, 'min_child_weight': 5, 'n_estimators': 250, 'subsample': 0.8, 'objective': 'reg:linear', 'max_depth': 3}
2017-05-27 22:13:16.406909
